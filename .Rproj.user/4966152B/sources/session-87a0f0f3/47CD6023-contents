#' GeoSpatialSuite: Comprehensive Dynamic Geospatial Analysis Toolkit
#'
#' @description
#' GeoSpatialSuite provides universal functions for geospatial analysis that work
#' with any region, any data type. Features include
#' vegetation and water indices, universal spatial joins/integration, dynamic crop analysis,
#' robust mosaicking, and visualizations.
#'
#' @details
#' Key features:
#' \itemize{
#'   \item Universal region support (states, countries, CONUS, custom boundaries)
#'   \item 20+ vegetation indices including NDVI, EVI, SAVI
#'   \item Both NDWI variants (McFeeters and Xu)
#'   \item Universal spatial join (works with ANY raster-vector combination)
#'   \item Dynamic CDL crop analysis (all crop codes and categories)
#'   \item Robust raster mosaicing with intelligent file selection
#'   \item Spatial interpolation and temporal analysis
#'   \item Professional visualizations and workflows
#' }
#'
#' @author Olatunde D. Akanbi \email{oda10@case.edu}
#' @keywords package geospatial remote-sensing
#'
#' @docType package
#' @name GeoSpatialSuite-package
#' @aliases GeoSpatialSuite
#'
#' @importFrom terra rast values nlyr crop mask mosaic merge resample project terrain
#' @importFrom sf st_read st_write st_transform st_crs st_as_sf st_geometry st_bbox
#' @importFrom dplyr filter select mutate
#' @importFrom stats cor lm sd median quantile na.omit
#' @importFrom utils read.csv write.csv
#'
NULL

# Package startup message
.onAttach <- function(libname, pkgname) {
  packageStartupMessage("==================================================")
  packageStartupMessage("GeoSpatialSuite v1.0.0 - Dynamic Geospatial Analysis")
  packageStartupMessage("==================================================")
  packageStartupMessage("Universal • Dynamic  • Collaborative")
  packageStartupMessage("")
  packageStartupMessage("Quick Start: help(package='GeoSpatialSuite')")
  packageStartupMessage("Examples: test_geospatialsuite_package()")
  packageStartupMessage("==================================================")
}

# Global variables
utils::globalVariables(c(".", "STATEFP", "STUSPS", "NAME", "GEOID"))
